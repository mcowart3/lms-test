{"ast":null,"code":"import LitDocument from \"../../model/LitDocument\";\nexport default class LocalTagService {\n  async tagDocument(document, tag) {\n    let updatedDoc = await (await fetch(\"http://localhost:3000/tag/\" + document.uniqueID.toString() + \"/\" + tag, {\n      method: 'POST',\n      mode: 'no-cors',\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    })).json();\n    console.log(document);\n    updatedDoc = new LitDocument(document.uniqueID, document.author, document.text, document.title, undefined, undefined, document.tags);\n    return new Promise((resolve, reject) => resolve(updatedDoc));\n  }\n\n}","map":{"version":3,"sources":["C:\\Users\\micai\\Documents\\GitHub\\jif0359\\frontEnd\\src\\services\\tagService\\LocalTagService.ts"],"names":["LitDocument","LocalTagService","tagDocument","document","tag","updatedDoc","fetch","uniqueID","toString","method","mode","headers","json","console","log","author","text","title","undefined","tags","Promise","resolve","reject"],"mappings":"AACA,OAAOA,WAAP,MAAwB,yBAAxB;AAEA,eAAe,MAAMC,eAAN,CAA6C;AACxD,QAAaC,WAAb,CAAyBC,QAAzB,EAAgDC,GAAhD,EAAmF;AAC/E,QAAIC,UAAU,GAAG,MAAM,CAAC,MAAMC,KAAK,CAC/B,+BAA+BH,QAAQ,CAACI,QAAT,CAAkBC,QAAlB,EAA/B,GAA8D,GAA9D,GAAoEJ,GADrC,EAC0C;AACzEK,MAAAA,MAAM,EAAE,MADiE;AACzDC,MAAAA,IAAI,EAAE,SADmD;AACxCC,MAAAA,OAAO,EAAE;AACtC,wBAAgB,kBADsB;AAEtC,kBAAU;AAF4B;AAD+B,KAD1C,CAAZ,EAMnBC,IANmB,EAAvB;AAOAC,IAAAA,OAAO,CAACC,GAAR,CAAYX,QAAZ;AACAE,IAAAA,UAAU,GAAG,IAAIL,WAAJ,CACTG,QAAQ,CAACI,QADA,EAETJ,QAAQ,CAACY,MAFA,EAGTZ,QAAQ,CAACa,IAHA,EAITb,QAAQ,CAACc,KAJA,EAKTC,SALS,EAMTA,SANS,EAOTf,QAAQ,CAACgB,IAPA,CAAb;AAUA,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqBD,OAAO,CAAChB,UAAD,CAAxC,CAAP;AACH;;AArBuD","sourcesContent":["import ITagService from \"./ITagService\";\r\nimport LitDocument from \"../../model/LitDocument\";\r\n\r\nexport default class LocalTagService implements ITagService {\r\n    public async tagDocument(document: LitDocument, tag: string): Promise<LitDocument> {\r\n        let updatedDoc = await (await fetch(\r\n            \"http://localhost:3000/tag/\" + document.uniqueID.toString() + \"/\" + tag, {\r\n            method: 'POST', mode: 'no-cors', headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json'\r\n            }\r\n        })).json();\r\n        console.log(document);\r\n        updatedDoc = new LitDocument(\r\n            document.uniqueID,\r\n            document.author,\r\n            document.text,\r\n            document.title,\r\n            undefined,\r\n            undefined,\r\n            document.tags\r\n        );\r\n\r\n        return new Promise((resolve, reject) => resolve(updatedDoc));\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}