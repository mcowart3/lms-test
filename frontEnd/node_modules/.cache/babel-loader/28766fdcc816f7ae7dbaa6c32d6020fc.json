{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\micai\\\\Documents\\\\GitHub\\\\jif0359\\\\frontEnd\\\\src\\\\components\\\\documents\\\\DocumentPage.tsx\";\nimport React, { Component } from \"react\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Container from \"react-bootstrap/Container\";\nimport styles from \"./DocumentPage.module.scss\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\nimport CommentSidebar from \"../comments/CommentSidebar\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport TestCommentService from \"../../services/commentService/TestCommentService\";\nimport LocalTagService from \"../../services/tagService/LocalTagService\";\nexport default class DocumentPage extends Component {\n  constructor(props) {\n    super(props);\n    this.commentService = void 0;\n    this.tagService = void 0;\n    this.state = {\n      comments: undefined,\n      tag: \"\",\n      currentTags: this.props.document.tags || [],\n      commentsVisible: false\n    };\n    this.commentService = new TestCommentService();\n    this.tagService = new LocalTagService();\n    this.getComments(this.props.document);\n  }\n\n  async getComments(document) {\n    let docComments = await this.commentService.getComments(document);\n    this.setState({\n      comments: docComments\n    });\n  }\n\n  async addTag(document, tag) {\n    var updatedTags = this.state.currentTags.concat(tag);\n    this.setState({\n      currentTags: updatedTags\n    });\n    let taggedDoc = await this.tagService.tagDocument(document, tag);\n    this.forceUpdate(); // hacky for now, but updates currentTags dynamically\n\n    return taggedDoc;\n  }\n\n  formatTags(tags) {\n    var formattedTags = \"\";\n\n    if (tags !== undefined) {\n      for (var i = 0; i < tags.length - 1; i++) {\n        formattedTags = formattedTags.concat(tags[i]);\n        formattedTags = formattedTags.concat(', ');\n      }\n\n      formattedTags = formattedTags.concat(tags[tags.length - 1]);\n    }\n\n    return formattedTags;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Jumbotron, {\n      fluid: true,\n      className: styles.Body,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 4\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 6\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: 8,\n      className: styles.textbckd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.titleContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: styles.Title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 8\n      }\n    }, this.props.document.title || \"Unknown\", \" \"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"outline-info\",\n      onClick: () => {\n        this.setState({\n          commentsVisible: !this.state.commentsVisible\n        });\n      },\n      className: styles.commentButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }, this.state.commentsVisible ? \"Hide Comments\" : \"Show Comments\")), /*#__PURE__*/React.createElement(\"h1\", {\n      className: styles.Author,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 8\n      }\n    }, this.props.document.author || \"Unknown\", \" \"), /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: styles.Text,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 8\n      }\n    }, \" \", this.props.document.text || \"Unknown\", \" \"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 8\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      className: styles.padding,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 8\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: styles.tags,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 10\n      }\n    }, \" Current tags: \", this.formatTags(this.state.currentTags))), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      className: styles.left,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 10\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      type: \"tag\",\n      className: styles.tagForm,\n      placeholder: \"Tag this document!\",\n      onChange: event => this.setState({\n        tag: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outline-info\",\n      onClick: () => {\n        this.addTag(this.props.document, this.state.tag);\n      },\n      href: '#tag/' + this.state.tag,\n      className: styles.tagButton,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }\n    }, \"Add Tag\"))))))), /*#__PURE__*/React.createElement(Col, {\n      sm: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }\n    }, this.state.commentsVisible ? /*#__PURE__*/React.createElement(CommentSidebar, {\n      comments: this.state.comments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 10\n      }\n    }) : /*#__PURE__*/React.createElement(React.Fragment, null)))));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/micai/Documents/GitHub/jif0359/frontEnd/src/components/documents/DocumentPage.tsx"],"names":["React","Component","Jumbotron","Container","styles","Form","FormControl","Button","CommentSidebar","Row","Col","TestCommentService","LocalTagService","DocumentPage","constructor","props","commentService","tagService","state","comments","undefined","tag","currentTags","document","tags","commentsVisible","getComments","docComments","setState","addTag","updatedTags","concat","taggedDoc","tagDocument","forceUpdate","formatTags","formattedTags","i","length","render","Body","textbckd","titleContainer","Title","title","commentButton","Author","author","Text","text","padding","left","tagForm","event","target","value","tagButton"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport styles from \"./DocumentPage.module.scss\";\r\nimport LitDocument from \"../../model/LitDocument\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport DocComment from \"../../model/DocComment\";\r\nimport CommentSidebar from \"../comments/CommentSidebar\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport ICommentService from \"../../services/commentService/ICommentService\";\r\nimport TestCommentService from \"../../services/commentService/TestCommentService\";\r\nimport ITagService from \"../../services/tagService/ITagService\";\r\nimport LocalTagService from \"../../services/tagService/LocalTagService\";\r\n\r\ninterface IDocumentPageProps {\r\n\tdocument: LitDocument;\r\n}\r\n\r\ninterface IDocumentPageState {\r\n\tcomments?: DocComment[];\r\n\ttag: string;\r\n\tcurrentTags: string[];\r\n\tcommentsVisible: boolean;\r\n}\r\n\r\nexport default class DocumentPage extends Component<IDocumentPageProps, IDocumentPageState> {\r\n\r\n\tprivate commentService: ICommentService;\r\n\tprivate tagService: ITagService;\r\n\r\n\tconstructor(props: IDocumentPageProps) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcomments: undefined,\r\n\t\t\ttag: \"\",\r\n\t\t\tcurrentTags: this.props.document.tags || [],\r\n\t\t\tcommentsVisible: false\r\n\t\t};\r\n\t\tthis.commentService = new TestCommentService();\r\n\t\tthis.tagService = new LocalTagService();\r\n\t\tthis.getComments(this.props.document);\r\n\t}\r\n\r\n\tprivate async getComments(document: LitDocument) {\r\n\t\tlet docComments: DocComment[] = await this.commentService.getComments(document);\r\n\t\tthis.setState({ comments: docComments });\r\n\t}\r\n\r\n\tprivate async addTag(document: LitDocument, tag: string) {\r\n\t\tvar updatedTags = this.state.currentTags.concat(tag);\r\n\t\tthis.setState({ currentTags: updatedTags });\r\n\t\tlet taggedDoc = await this.tagService.tagDocument(document, tag);\r\n\t\tthis.forceUpdate(); // hacky for now, but updates currentTags dynamically\r\n\t\treturn taggedDoc;\r\n\t}\r\n\r\n\tprivate formatTags(tags: string[]) {\r\n\t\tvar formattedTags = \"\";\r\n\t\tif (tags !== undefined) {\r\n\t\t\tfor (var i = 0; i < tags.length - 1; i++) {\r\n\t\t\t\tformattedTags = formattedTags.concat(tags[i]);\r\n\t\t\t\tformattedTags = formattedTags.concat(', ');\r\n\t\t\t}\r\n\t\t\tformattedTags = formattedTags.concat(tags[tags.length - 1]);\r\n\t\t}\r\n\t\treturn formattedTags;\r\n\t}\r\n\r\n\trender(): JSX.Element {\r\n\t\treturn (\r\n\t\t\t<Jumbotron fluid className={styles.Body}>\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t<Col sm={8} className={styles.textbckd}>\r\n\t\t\t\t\t\t\t<div className = {styles.titleContainer}>\r\n\t\t\t\t\t\t\t<h1 className={styles.Title}>{this.props.document.title || \"Unknown\"} </h1>\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tvariant=\"outline-info\"\r\n\t\t\t\t\t\t\t\t\tonClick={() => { this.setState({ commentsVisible: !this.state.commentsVisible }) }}\r\n\t\t\t\t\t\t\t\t\tclassName={styles.commentButton}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{this.state.commentsVisible ? \"Hide Comments\" : \"Show Comments\"}\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<h1 className={styles.Author}>{this.props.document.author || \"Unknown\"} </h1>\r\n\t\t\t\t\t\t\t<hr></hr>\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t<p className={styles.Text}> {this.props.document.text || \"Unknown\"} </p>\r\n\r\n\t\t\t\t\t\t\t<br />\r\n\t\t\t\t\t\t\t<br />\r\n\r\n\t\t\t\t\t\t\t<Row className={styles.padding}>\r\n\t\t\t\t\t\t\t\t<Col sm={4}>\r\n\t\t\t\t\t\t\t\t\t{/* need to update this dynamically */}\r\n\t\t\t\t\t\t\t\t\t<p className={styles.tags}> Current tags: {this.formatTags(this.state.currentTags)}</p>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col>\r\n\t\t\t\t\t\t\t\t\t<Form className={styles.left}>\r\n\t\t\t\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"tag\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={styles.tagForm}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Tag this document!\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={(event) => this.setState({ tag: (event.target.value) })}\r\n\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant=\"outline-info\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => { this.addTag(this.props.document, this.state.tag) }}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thref={'#tag/' + this.state.tag}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={styles.tagButton}\r\n\t\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tAdd Tag\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Col>\r\n\r\n\t\t\t\t\t\t<Col sm={4}>\r\n\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\tthis.state.commentsVisible ?\r\n\t\t\t\t\t\t\t\t\t<CommentSidebar\r\n\t\t\t\t\t\t\t\t\t\tcomments={this.state.comments}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\t\t\t<></>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t</Container>\r\n\t\t\t</Jumbotron >\r\n\t\t);\r\n\t}\r\n}\r\n"]},"metadata":{},"sourceType":"module"}